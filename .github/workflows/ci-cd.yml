name: CI/CD Pipeline - Teste, Build e Push

# Gatilho (trigger)
on:
  push:
    branches: [ "main" ]

# Tarefas (jobs) que o pipeline irá executar
jobs:
  # job principal
  test-build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Faz o checkout do seu código do repositório para a máquina virtual
      - name: Checkout do código
        uses: actions/checkout@v4

      # --- ETAPA DE TESTES DO BACKEND ---
      # 2. Configura o ambiente Java (JDK 21) necessário para rodar o Maven
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Executa os testes do backend usando o Maven
      - name: Teste do Backend com Maven
        # O -B significa "batch mode", ideal para CI.
        # working-directory garante que o comando rode dentro da pasta /backend
        run: mvn -B test
        working-directory: ./backend

      # --- ETAPA DE TESTES DO FRONTEND ---
      # 4. Configura o ambiente Node.js (v18) necessário para o React
      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      # 5. Instala as dependências do frontend
      - name: Instalar dependências do Frontend
        run: npm install
        working-directory: ./frontend
        
      # 6. Executa os testes do frontend
      # --watchAll=false faz com que os testes rodem uma vez e saiam, sem entrar em modo de observação.
      - name: Teste do Frontend com Jest
        run: npm test -- --watchAll=false
        working-directory: ./frontend

      # --- ETAPA DE BUILD E PUSH (Só executa se os testes passarem) ---
      # 7. Faz o login no Docker Hub usando os segredos que configuramos
      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 8. Builda as imagens Docker usando o docker-compose.yaml
      - name: Build das imagens Docker
        run: docker compose build

      # 9. Envia (push) as imagens para o Docker Hub
      - name: Push das imagens para o Docker Hub
        run: docker compose push